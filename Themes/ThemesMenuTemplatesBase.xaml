<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:frameworkelementbehaviors="clr-namespace:DesktopPanelTool.Behaviors.FrameworkElementBehaviors"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Style x:Key="ContextMenuBase" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource ContextMenu_Background}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="{DynamicResource ContextMenu_Border_Thickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ContextMenu_Border_Brush}" />
        <Setter Property="Padding" Value="{DynamicResource ContextMenu_Padding}" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="{DynamicResource DropShadow}" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <theme:SystemDropShadowChrome
                        Name="Shdw"
                        SnapsToDevicePixels="true"
                        Color="Transparent">
                        <Border
                            Name="ContextMenuBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource ContextMenu_Border_CornerRadius}">

                            <ScrollViewer
                                Name="ContextMenuScrollViewer"
                                Grid.ColumnSpan="2"
                                Margin="1,0"
                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},
                                                                              ResourceId=MenuScrollViewer}}">

                                <ScrollViewer.OpacityMask>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Border
                                                Width="{Binding ActualWidth, ElementName=ContextMenuBorder, FallbackValue=0}"
                                                Height="{Binding ActualHeight, ElementName=ContextMenuBorder, FallbackValue=0}"
                                                Background="Black"
                                                CornerRadius="{Binding CornerRadius, ElementName=ContextMenuBorder, FallbackValue='0'}" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </ScrollViewer.OpacityMask>
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle
                                            Name="OpaqueRect"
                                            Width="{Binding ElementName=ContextMenuBorder, Path=ActualWidth, FallbackValue=0}"
                                            Height="{Binding ElementName=ContextMenuBorder, Path=ActualHeight, FallbackValue=0}"
                                            Fill="{Binding ElementName=ContextMenuBorder, Path=Background}" />
                                    </Canvas>
                                    <Rectangle
                                        Width="28"
                                        Margin="1,2"
                                        HorizontalAlignment="Left"
                                        Fill="{DynamicResource ContextMenu_LeftMargin_Background}"
                                        RadiusX="{DynamicResource ContextMenu_LeftMargin_RadiusX}"
                                        RadiusY="{DynamicResource ContextMenu_LeftMargin_RadiusY}" />
                                    <Rectangle
                                        Width="1"
                                        Margin="29,2,0,2"
                                        HorizontalAlignment="Left"
                                        Fill="{DynamicResource ContextMenu_LeftMargin_DepressedVerticalSeparator_Brush}" />
                                    <Rectangle
                                        Width="1"
                                        Margin="30,2,0,2"
                                        HorizontalAlignment="Left"
                                        Fill="{DynamicResource ContextMenu_LeftMargin_EmbossedVerticalSeparator_Brush}" />
                                    <ItemsPresenter
                                        Name="ItemsPresenter"
                                        Margin="{TemplateBinding Padding}"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="{DynamicResource DropShadow_Margin}" />
                            <Setter TargetName="Shdw" Property="Color" Value="{DynamicResource DropShadow_Color}" />
                        </Trigger>
                        <Trigger SourceName="ContextMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=ContextMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=ContextMenuScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Type ContextMenu}"
        BasedOn="{StaticResource ContextMenuBase}"
        TargetType="{x:Type ContextMenu}" />

    <Style x:Key="MenuBase" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource Menu.Static.Background}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource MenuBase}" TargetType="{x:Type Menu}" />

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}" TargetType="{x:Type ContentControl}">
        <Border
            Padding="2"
            Background="{TemplateBinding Menu.Background}"
            BorderBrush="{TemplateBinding Menu.BorderBrush}"
            BorderThickness="1">
            <Border Background="{DynamicResource Menu.Static.Background}">
                <ContentPresenter />
            </Border>
        </Border>
    </ControlTemplate>

    <Style
        x:Key="MenuScrollButton"
        BasedOn="{x:Null}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            Margin="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},
                                     ResourceId=MenuScrollViewer}"
        BasedOn="{x:Null}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>
                        <RepeatButton
                            Grid.Row="0"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="0"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}" />
                        </RepeatButton>
                        <RepeatButton
                            Grid.Row="2"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="100"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource Menu.Static.Separator}" />
        <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Separator}" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        Margin="30,0,0,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path
                    x:Name="GlyphPanel"
                    Margin="3"
                    VerticalAlignment="Center"
                    Data="{StaticResource Checkmark}"
                    Fill="{StaticResource Menu.Static.Foreground}"
                    FlowDirection="LeftToRight"
                    Visibility="Collapsed" />
                <ContentPresenter
                    Grid.Column="1"
                    Margin="{TemplateBinding Padding}"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MenuItem.Highlight.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource Menu.Disabled.Foreground}" />
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{DynamicResource Menu.Disabled.Foreground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MenuItem.Highlight.Disabled.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource MenuItem.Highlight.Disabled.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path
                    x:Name="GlyphPanel"
                    Margin="3"
                    VerticalAlignment="Center"
                    Data="{StaticResource Checkmark}"
                    Fill="{TemplateBinding Menu.Foreground}"
                    FlowDirection="LeftToRight"
                    Visibility="Collapsed" />
                <ContentPresenter
                    Grid.Column="1"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=templateRoot}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Border
                        x:Name="SubMenuBorder"
                        Padding="2"
                        Background="{StaticResource Menu.Static.Background}"
                        BorderBrush="{StaticResource Menu.Static.Border}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        Name="OpaqueRect"
                                        Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                        Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                        Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                </Canvas>
                                <Rectangle
                                    Width="1"
                                    Margin="29,2,0,2"
                                    HorizontalAlignment="Left"
                                    Fill="{DynamicResource Menu.Static.Separator}" />
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Grid.IsSharedSizeScope="true"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MenuItem.Highlight.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource Menu.Disabled.Foreground}" />
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{DynamicResource Menu.Disabled.Foreground}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Height="22"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="22"
                        SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border
                    x:Name="GlyphPanel"
                    Width="22"
                    Height="22"
                    Margin="-1,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource MenuItem.Selected.Background}"
                    BorderBrush="{StaticResource MenuItem.Selected.Border}"
                    BorderThickness="1"
                    ClipToBounds="False"
                    Visibility="Hidden">
                    <Path
                        x:Name="Glyph"
                        Width="10"
                        Height="11"
                        Data="{StaticResource Checkmark}"
                        Fill="{StaticResource Menu.Static.Foreground}"
                        FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter
                    x:Name="menuHeaderContainer"
                    Grid.Column="2"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock
                    x:Name="menuGestureText"
                    Grid.Column="4"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    VerticalAlignment="Center"
                    Opacity="0.7"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MenuItem.Highlight.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource Menu.Disabled.Foreground}" />
                <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource Menu.Disabled.Foreground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MenuItem.Highlight.Disabled.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource MenuItem.Highlight.Disabled.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  pop up parent  -->

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Height="22"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="22"
                        SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border
                    x:Name="GlyphPanel"
                    Width="22"
                    Height="22"
                    Margin="-1,0,0,0"
                    VerticalAlignment="Center"
                    Background="{StaticResource MenuItem.Highlight.Background}"
                    BorderBrush="{StaticResource MenuItem.Highlight.Border}"
                    BorderThickness="1"
                    Visibility="Hidden">
                    <Path
                        x:Name="Glyph"
                        Width="9"
                        Height="11"
                        Data="{DynamicResource Checkmark}"
                        Fill="{StaticResource Menu.Static.Foreground}"
                        FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter
                    Grid.Column="2"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock
                    Grid.Column="4"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    VerticalAlignment="Center"
                    Opacity="0.7"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    x:Name="RightArrow"
                    Grid.Column="5"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Data="{StaticResource RightArrow}"
                    Fill="{StaticResource Menu.Static.Foreground}" />

                <!--  popup  -->

                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    HorizontalOffset="16"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Right"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    VerticalOffset="-19">

                    <Grid Background="Transparent">

                        <!--  rear shadow  -->
                        <Grid Margin="{DynamicResource WindowShadowAreaSize}">
                            <Grid
                                Width="{DynamicResource WindowShadowWidth}"
                                HorizontalAlignment="Right"
                                Background="Black">
                                <Grid.Effect>
                                    <DropShadowEffect
                                        BlurRadius="{DynamicResource WindowBottomRightShadowBlur}"
                                        Direction="-45"
                                        RenderOptions.BitmapScalingMode="{DynamicResource BitmapScalingMode}"
                                        RenderingBias="{DynamicResource RenderingBias}"
                                        Color="{DynamicResource WindowShadowBrush}" />
                                </Grid.Effect>
                            </Grid>
                            <Grid
                                Width="{DynamicResource WindowShadowWidth}"
                                HorizontalAlignment="Right"
                                Background="Black">
                                <Grid.Effect>
                                    <DropShadowEffect
                                        BlurRadius="{DynamicResource WindowBottomRightShadowBlur}"
                                        Direction="-45"
                                        RenderOptions.BitmapScalingMode="{DynamicResource BitmapScalingMode}"
                                        RenderingBias="{DynamicResource RenderingBias}"
                                        Color="{DynamicResource WindowShadowBrush}" />
                                </Grid.Effect>
                            </Grid>
                            <Grid
                                Width="{DynamicResource WindowShadowWidth}"
                                HorizontalAlignment="Right"
                                Background="Black">
                                <Grid.Effect>
                                    <BlurEffect Radius="16" />
                                </Grid.Effect>
                            </Grid>

                            <Grid
                                Width="{DynamicResource WindowShadowWidth}"
                                HorizontalAlignment="Left"
                                Background="Black">
                                <Grid.Effect>
                                    <DropShadowEffect
                                        BlurRadius="{DynamicResource WindowTopLeftShadowBlur}"
                                        Direction="135"
                                        RenderOptions.BitmapScalingMode="{DynamicResource BitmapScalingMode}"
                                        RenderingBias="{DynamicResource RenderingBias}"
                                        Color="{DynamicResource WindowShadowBrush}" />
                                </Grid.Effect>
                            </Grid>
                            <Grid
                                Width="{DynamicResource WindowShadowWidth}"
                                HorizontalAlignment="Left"
                                Background="Black">
                                <Grid.Effect>
                                    <DropShadowEffect
                                        BlurRadius="{DynamicResource WindowTopLeftShadowBlur}"
                                        Direction="135"
                                        RenderOptions.BitmapScalingMode="{DynamicResource BitmapScalingMode}"
                                        RenderingBias="{DynamicResource RenderingBias}"
                                        Color="{DynamicResource WindowShadowBrush}" />
                                </Grid.Effect>
                            </Grid>
                            <Grid
                                Width="{DynamicResource WindowShadowWidth}"
                                HorizontalAlignment="Left"
                                Background="Black">
                                <Grid.Effect>
                                    <BlurEffect Radius="16" />
                                </Grid.Effect>
                            </Grid>

                            <Grid
                                Height="{DynamicResource WindowShadowWidth}"
                                VerticalAlignment="Top"
                                Background="Black">
                                <Grid.Effect>
                                    <DropShadowEffect
                                        BlurRadius="{DynamicResource WindowTopLeftShadowBlur}"
                                        Direction="90"
                                        RenderOptions.BitmapScalingMode="{DynamicResource BitmapScalingMode}"
                                        RenderingBias="{DynamicResource RenderingBias}"
                                        Color="{DynamicResource WindowShadowBrush}" />
                                </Grid.Effect>
                            </Grid>
                            <Grid
                                Height="{DynamicResource WindowShadowWidth}"
                                VerticalAlignment="Top"
                                Background="Black">
                                <Grid.Effect>
                                    <DropShadowEffect
                                        BlurRadius="{DynamicResource WindowTopLeftShadowBlur}"
                                        Direction="90"
                                        RenderOptions.BitmapScalingMode="{DynamicResource BitmapScalingMode}"
                                        RenderingBias="{DynamicResource RenderingBias}"
                                        Color="{DynamicResource WindowShadowBrush}" />
                                </Grid.Effect>
                            </Grid>
                            <Grid
                                Height="{DynamicResource WindowShadowWidth}"
                                VerticalAlignment="Top"
                                Background="Black">
                                <Grid.Effect>
                                    <BlurEffect Radius="16" />
                                </Grid.Effect>
                            </Grid>

                            <Grid
                                Height="{DynamicResource WindowShadowWidth}"
                                VerticalAlignment="Bottom"
                                Background="Black">
                                <Grid.Effect>
                                    <DropShadowEffect
                                        BlurRadius="{DynamicResource WindowBottomRightShadowBlur}"
                                        Direction="-45"
                                        RenderOptions.BitmapScalingMode="{DynamicResource BitmapScalingMode}"
                                        RenderingBias="{DynamicResource RenderingBias}"
                                        Color="{DynamicResource WindowShadowBrush}" />
                                </Grid.Effect>
                            </Grid>
                            <Grid
                                Height="{DynamicResource WindowShadowWidth}"
                                VerticalAlignment="Bottom"
                                Background="Black">
                                <Grid.Effect>
                                    <DropShadowEffect
                                        BlurRadius="{DynamicResource WindowBottomRightShadowBlur}"
                                        Direction="-45"
                                        RenderOptions.BitmapScalingMode="{DynamicResource BitmapScalingMode}"
                                        RenderingBias="{DynamicResource RenderingBias}"
                                        Color="{DynamicResource WindowShadowBrush}" />
                                </Grid.Effect>
                            </Grid>
                            <Grid
                                Height="{DynamicResource WindowShadowWidth}"
                                VerticalAlignment="Bottom"
                                Background="Black">
                                <Grid.Effect>
                                    <BlurEffect Radius="16" />
                                </Grid.Effect>
                            </Grid>
                        </Grid>

                        <!--  content  -->
                        <Grid Margin="{DynamicResource WindowContentAreaShadowAreaSize}">

                            <!--  image layer  -->
                            <Image Style="{DynamicResource PanelBackgroundImage}" />
                            <!--  gradients layer  -->
                            <Border Style="{DynamicResource PanelBackgroundLayer0}" />
                            <Border Style="{DynamicResource PanelBackgroundLayer1}" />

                            <Border x:Name="AnimatedGradientBackground" Style="{DynamicResource PanelBackgroundLayer1b}">
                                <behaviors:Interaction.Behaviors>
                                    <frameworkelementbehaviors:AnimateGradientBackgroundFrameworkElementBehavior StartsImmediately="True" />
                                </behaviors:Interaction.Behaviors>
                            </Border>

                            <!--  content layer  -->
                            <Border Style="{DynamicResource DesktopPanelContentBackgroundLayer}">

                                <!--  panel layout  -->
                                <Grid Margin="{DynamicResource SubMenuPopupPadding}">

                                    <!--  content  -->
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    Name="OpaqueRect"
                                                    Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                                    Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                                    Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                            </Canvas>
                                            <Rectangle
                                                Width="1"
                                                Margin="29,2,0,2"
                                                HorizontalAlignment="Left"
                                                Fill="{DynamicResource ContextMenu_LeftMargin_DepressedVerticalSeparator_Brush}" />
                                            <!--  Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"  -->
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                Grid.IsSharedSizeScope="true"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>

                                </Grid>

                            </Border>

                            <!--  border layer  -->
                            <Border Style="{DynamicResource PanelBackgroundLayer2}" />
                        </Grid>

                    </Grid>

                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MenuItem.Highlight.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource Menu.Disabled.Foreground}" />
                <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource Menu.Disabled.Foreground}" />
                <Setter TargetName="RightArrow" Property="Fill" Value="{DynamicResource Menu.Disabled.Foreground}" />
            </Trigger>

            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MenuItemBase" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource Menu.Static.Foreground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
                <Setter Property="Padding" Value="6,0" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="{DynamicResource Menu.Static.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Menu.Static.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource Menu.Static.Foreground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
                <Setter Property="Padding" Value="6,0" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource MenuItemBase}" TargetType="{x:Type MenuItem}" />

</ResourceDictionary>