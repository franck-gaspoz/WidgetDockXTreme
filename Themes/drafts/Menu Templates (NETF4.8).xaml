<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Color x:Key="Menu_Border_LightColor">#CCCCCCCC</Color>
    <Color x:Key="Menu_Border_DarkColor">#CC777777</Color>
    <Color x:Key="Menu_Background_LightColor">#CCCCCCCC</Color>
    <Color x:Key="Menu_Background_DarkColor">#CC777777</Color>

    <SolidColorBrush x:Key="Menu_Separator_Brush">#CCCCCCCC</SolidColorBrush>

    <SolidColorBrush x:Key="MenuItem_TopLevelHeader_Border_Brush">#CCCCCCCC</SolidColorBrush>

    <SolidColorBrush x:Key="MenuPopup_Background_Brush">#CC000000</SolidColorBrush>

    <SolidColorBrush x:Key="SubMenuPopup_Background_Brush">#CC000000</SolidColorBrush>
    <SolidColorBrush x:Key="SubMenuHeader_Border_Brush">#CC777777</SolidColorBrush>

    <SolidColorBrush x:Key="MenuItem_Highlighted_Border_Brush">Transparent</SolidColorBrush>
    <Color x:Key="MenuItem_Highlighted_Background_LightColor">#CCCCCCCC</Color>
    <Color x:Key="MenuItem_Highlighted_Background_DarkColor">#CCCCCCCC</Color>

    <SolidColorBrush x:Key="MenuItem_Disabled_Foreground_Brush">#CC777777</SolidColorBrush>

    <Color x:Key="MenuItem_TopLevel_Border_LightColor">#CCCCCCCC</Color>
    <Color x:Key="MenuItem_TopLevel_Border_DarkColor">#CC777777</Color>

    <!--#region eg. context menu items-->

    <Color x:Key="MenuItem_SubLevel_Border_LightColor">#CCCCCCCC</Color>
    <Color x:Key="MenuItem_SubLevel_Border_DarkColor">#CC777777</Color>
    <Color x:Key="MenuItem_SubLevel_Background_LightColor">#CCCCCCCC</Color>
    <Color x:Key="MenuItem_SubLevel_Background_DarkColor">#CC777777</Color>

    <Color x:Key="MenuItem_SubLevel_Highlighted_Border_LightColor">#CCCCCCCC</Color>
    <Color x:Key="MenuItem_SubLevel_Highlighted_Border_DarkColor">Red</Color>

    <!--  item hover  -->
    <Color x:Key="MenuItem_SubLevel_Highlighted_Background_LightColor">Transparent</Color>
    <Color x:Key="MenuItem_SubLevel_Highlighted_Background_DarkColor">Transparent</Color>

    <SolidColorBrush x:Key="MenuItem_SubLevel_Disabled_Foreground_Brush">#CC777777</SolidColorBrush>
    <SolidColorBrush x:Key="MenuItem_SubLevel_Highlighted_Foreground_Brush">#00000000</SolidColorBrush>

    <!--#endregion-->

    <Color x:Key="MenuHeader_SubLevel_Highlighted_Background_LightColor">Transparent</Color>
    <Color x:Key="MenuHeader_SubLevel_Highlighted_Background_DarkColor">#CC777777</Color>

    <SolidColorBrush x:Key="MenuHeader_SubLevel_Disabled_Foreground_Brush">#CC777777</SolidColorBrush>

    <Color x:Key="MenuHeader_SubLevel_Highlighted_Border_LightColor">#CC777777</Color>
    <Color x:Key="MenuHeader_SubLevel_Highlighted_Border_DarkColor">Transparent</Color>

    <SolidColorBrush x:Key="MenuItem_Glyph_Brush">#CC777777</SolidColorBrush>
    <Color x:Key="MenuItem_Glyph_Color">#CC777777</Color>


    <!--#region-->

    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0.0" Color="{DynamicResource Menu_Border_LightColor}" />
                                        <GradientStop Offset="1.0" Color="{DynamicResource Menu_Border_DarkColor}" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="{DynamicResource Menu_Background_LightColor}" />
                                <GradientStop Offset="1" Color="{DynamicResource Menu_Background_DarkColor}" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <StackPanel
                            ClipToBounds="True"
                            IsItemsHost="True"
                            Orientation="Horizontal" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{DynamicResource Menu_Separator_Brush}" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TopLevelHeader  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter
                    Margin="6,3,6,3"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Popup
                    x:Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Bottom"
                    PopupAnimation="Fade">
                    <Border
                        x:Name="SubmenuBorder"
                        Background="{DynamicResource MenuPopup_Background_Brush}"
                        BorderBrush="{DynamicResource MenuItem_TopLevelHeader_Border_Brush}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuItem_Highlighted_Border_Brush}" />
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource MenuItem_Highlighted_Background_LightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource MenuItem_Highlighted_Background_DarkColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground" Value="Red" />

            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MenuItem_Disabled_Foreground_Brush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  TopLevelItem  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter
                    Margin="6,3,6,3"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource MenuItem_TopLevel_Border_LightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource MenuItem_TopLevel_Border_DarkColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground" Value="Green" />

            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MenuItem_Disabled_Foreground_Brush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  SubmenuItem  -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <Border
                    x:Name="Check"
                    Width="13"
                    Height="13"
                    Margin="6,0,6,0"
                    BorderThickness="1"
                    Visibility="Collapsed">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Offset="0.0" Color="{DynamicResource MenuItem_SubLevel_Border_LightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource MenuItem_SubLevel_Border_DarkColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource MenuItem_SubLevel_Background_LightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource MenuItem_SubLevel_Background_DarkColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Path
                        x:Name="CheckMark"
                        Width="7"
                        Height="7"
                        Data="M 0 0 L 7 7 M 0 7 L 7 0"
                        SnapsToDevicePixels="False"
                        StrokeThickness="2"
                        Visibility="Hidden">
                        <Path.Stroke>
                            <SolidColorBrush Color="{DynamicResource MenuItem_Glyph_Color}" />
                        </Path.Stroke>
                    </Path>
                </Border>
                <ContentPresenter
                    x:Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True">
                    <!--<ContentPresenter.Resources>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="Red" />
                        </Style>
                    </ContentPresenter.Resources>-->
                </ContentPresenter>
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="5,2,0,2"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="{DynamicResource MenuItem_SubLevel_Highlighted_Background_LightColor}" />
                            <GradientStop Offset="1" Color="{DynamicResource MenuItem_SubLevel_Highlighted_Background_DarkColor}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="{DynamicResource MenuItem_SubLevel_Highlighted_Border_LightColor}" />
                            <GradientStop Offset="1" Color="{DynamicResource MenuItem_SubLevel_Highlighted_Border_DarkColor}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>

                <Setter Property="Label.Foreground" Value="{DynamicResource MenuItem_SubLevel_Highlighted_Foreground_Brush}" />

            </Trigger>

            <!--  fix menu item default color  -->
            <Trigger Property="IsHighlighted" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource TextForeground}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource MenuItem_SubLevel_Disabled_Foreground_Brush}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <ContentPresenter
                    x:Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="5,2,2,2"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource MenuItem_Glyph_Color}" />
                    </Path.Fill>
                </Path>
                <Popup
                    x:Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="-4"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Right"
                    PopupAnimation="Fade">
                    <Border
                        x:Name="SubmenuBorder"
                        Background="{DynamicResource SubMenuPopup_Background_Brush}"
                        BorderBrush="{DynamicResource SubMenuHeader_Border_Brush}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="{DynamicResource MenuHeader_SubLevel_Highlighted_Border_LightColor}" />
                            <GradientStop Offset="1" Color="{DynamicResource MenuHeader_SubLevel_Highlighted_Border_DarkColor}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="{DynamicResource MenuHeader_SubLevel_Highlighted_Border_LightColor}" />
                            <GradientStop Offset="1" Color="{DynamicResource MenuHeader_SubLevel_Highlighted_Border_DarkColor}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground" Value="Blue" />

            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource MenuHeader_SubLevel_Disabled_Foreground_Brush}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  MenuItem Style  -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ScrollViewer for a MenuItem  -->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style
        x:Key="MenuScrollViewer"
        BasedOn="{x:Null}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton
                            Grid.Row="0"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="0"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        </RepeatButton>
                        <RepeatButton
                            Grid.Row="2"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="100"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        x:Name="Border"
                        Background="{DynamicResource ContextMenu_Background}"
                        BorderBrush="{DynamicResource ContextMenu_Border_Brush}"
                        BorderThickness="{DynamicResource ContextMenu_Border_Thickness}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="{DynamicResource ContextMenu_Padding}" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="{DynamicResource ContextMenu_Border_CornerRadius}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border
                        Name="Border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="{DynamicResource ToolTip_Background}"
                        BorderBrush="{DynamicResource ToolTip_Border_Brush}"
                        BorderThickness="{DynamicResource ToolTip_Border_Thickness}">
                        <ContentPresenter
                            Margin="{DynamicResource ToolTip_Content_Margin}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="{DynamicResource ToolTip_Border_CornerRadius}" />
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>