<UserControl
    x:Class="DesktopPanelTool.Controls.WidgetButtonsBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controlcommands="clr-namespace:DesktopPanelTool.Commands.ControlCommands"
    xmlns:controls="clr-namespace:DesktopPanelTool.Controls"
    xmlns:converters="clr-namespace:DesktopPanelTool.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lib="clr-namespace:DesktopPanelTool.Lib"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:DesktopPanelTool.Views"
    xmlns:widgetcommands="clr-namespace:DesktopPanelTool.Commands.WidgetCommands"
    d:DesignHeight="32"
    d:DesignWidth="100"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <lib:BindingProxy x:Key="Proxy" Data="{Binding}" />

            <!--  widget menu  -->
            <ContextMenu x:Key="WidgetMenu">
                <MenuItem Header="Widget settings…" Visibility="{Binding Data.ButtonSettingsVisibility, Source={StaticResource Proxy}}">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/icons8-settings-20.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Command="{x:Static widgetcommands:WidgetCommands.Close}" Header="Close">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{x:Static converters:Converters.MultiValue}">
                            <Binding Path="Data.PanelViewModel.View" Source="{StaticResource Proxy}" />
                            <Binding Path="Data.View" Source="{StaticResource Proxy}" />
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/icons8-macos-close-20.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>

        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*" />
            <ColumnDefinition Width="13*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal">
            <Grid>
                <controls:IconButton
                    ButtonToolTip="options"
                    ClickHandlerCommand="{x:Static controlcommands:ControlCommands.OpenContextMenu}"
                    Icon="/Images/Icons/icons8-popup-20.png"
                    MouseOutOpacity="{DynamicResource IconButtonMouseOutOpacity}"
                    MouseOverCursor="{DynamicResource IconButtonMouseOverCursor}"
                    MouseOverOpacity="{DynamicResource IconButtonMouseOverOpacity}"
                    MouseOverOpacityTransitionAnimationDuration="{DynamicResource IconButtonMouseOverOpacityTransitionAnimationDuration}">
                    <controls:IconButton.ClickHandlerCommandParameter>
                        <MultiBinding Converter="{x:Static converters:Converters.MultiValue}">
                            <Binding Source="{StaticResource WidgetMenu}" />
                            <Binding RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </controls:IconButton.ClickHandlerCommandParameter>
                </controls:IconButton>
            </Grid>
            <controls:IconButton
                ButtonToolTip="close"
                ClickHandlerCommand="{x:Static widgetcommands:WidgetCommands.Close}"
                Icon="/Images/Icons/icons8-macos-close-20.png"
                MouseOutOpacity="{DynamicResource IconButtonMouseOutOpacity}"
                MouseOverCursor="{DynamicResource IconButtonMouseOverCursor}"
                MouseOverOpacity="{DynamicResource IconButtonMouseOverOpacity}"
                MouseOverOpacityTransitionAnimationDuration="{DynamicResource IconButtonMouseOverOpacityTransitionAnimationDuration}">
                <controls:IconButton.ClickHandlerCommandParameter>
                    <MultiBinding Converter="{x:Static converters:Converters.MultiValue}" UpdateSourceTrigger="LostFocus">
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type views:DesktopPanelBase}}" />
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type controls:WidgetControl}}" />
                    </MultiBinding>
                </controls:IconButton.ClickHandlerCommandParameter>
            </controls:IconButton>
        </StackPanel>
    </Grid>
</UserControl>
