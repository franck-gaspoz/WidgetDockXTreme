<UserControl
    x:Class="DesktopPanelTool.Controls.DesktopPanelButtonsBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controlcommands="clr-namespace:DesktopPanelTool.Commands.ControlCommands"
    xmlns:controls="clr-namespace:DesktopPanelTool.Controls"
    xmlns:converters="clr-namespace:DesktopPanelTool.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:desktoppanelcommands="clr-namespace:DesktopPanelTool.Commands.DesktopPanelCommands"
    xmlns:desktoppaneltoolcommands="clr-namespace:DesktopPanelTool.Commands.DesktopPanelToolCommands"
    xmlns:lib="clr-namespace:DesktopPanelTool.Lib"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="32"
    d:DesignWidth="130"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <lib:BindingProxy x:Key="Proxy" Data="{Binding}" />
            <!--  desktop panel menu  -->
            <ContextMenu x:Key="PanelMenu">
                <MenuItem Header="Dock settings…">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/icons8-settings-20.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{x:Static desktoppanelcommands:DesktopPanelCommands.AddSelectedWidget}" Header="Add a widget…">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/icons8-add-property-20.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{x:Static desktoppaneltoolcommands:DesktopPanelToolCommands.AddPanel}" Header="Add a dock…">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/icons8-add-column-20.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{x:Static desktoppaneltoolcommands:DesktopPanelToolCommands.Settings}" Header="Application settings…">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/icons8-settings-20.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem
                    Command="{x:Static desktoppanelcommands:DesktopPanelCommands.Close}"
                    CommandParameter="{Binding Data.View, Source={StaticResource Proxy}}"
                    Header="Close">
                    <MenuItem.Icon>
                        <Image Source="/Images/Icons/icons8-macos-close-20.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{x:Static desktoppanelcommands:DesktopPanelCommands.DumpInfo}"
                    CommandParameter="{Binding Data.View, Source={StaticResource Proxy}}"
                    Header="Dump info" />
            </ContextMenu>

        </Grid.Resources>

        <StackPanel Orientation="Horizontal">
            <controls:IconButton
                ButtonToolTip="options"
                ClickHandlerCommand="{x:Static controlcommands:ControlCommands.OpenContextMenu}"
                EnableKeepOrientationWhenInRotationOrientedPanelBehavior="True"
                Icon="/Images/Icons/icons8-popup-20.png"
                MouseOutOpacity="{DynamicResource IconButtonMouseOutOpacity}"
                MouseOverCursor="{DynamicResource IconButtonMouseOverCursor}"
                MouseOverOpacity="{DynamicResource IconButtonMouseOverOpacity}"
                MouseOverOpacityTransitionAnimationDuration="{DynamicResource IconButtonMouseOverOpacityTransitionAnimationDuration}">
                <controls:IconButton.ClickHandlerCommandParameter>
                    <MultiBinding Converter="{x:Static converters:Converters.MultiValue}">
                        <Binding Source="{StaticResource PanelMenu}" />
                        <Binding RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </controls:IconButton.ClickHandlerCommandParameter>
            </controls:IconButton>
            <Grid Visibility="{Binding IsDocked, Converter={x:Static converters:Converters.BoolToVisibility}}">
                <Grid Visibility="{Binding IsPined, Converter={x:Static converters:Converters.NotBoolToVisibility}}">
                    <controls:IconButton
                        ButtonToolTip="pin"
                        ClickHandlerMethodName="Pin"
                        EnableKeepOrientationWhenInRotationOrientedPanelBehavior="True"
                        EventObjectHandler="{Binding ViewModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                        Icon="/Images/Icons/icons8-pin-20.png"
                        MouseOutOpacity="{DynamicResource IconButtonMouseOutOpacity}"
                        MouseOverCursor="{DynamicResource IconButtonMouseOverCursor}"
                        MouseOverOpacity="{DynamicResource IconButtonMouseOverOpacity}"
                        MouseOverOpacityTransitionAnimationDuration="{DynamicResource IconButtonMouseOverOpacityTransitionAnimationDuration}" />
                </Grid>
                <Grid Visibility="{Binding IsPined, Converter={x:Static converters:Converters.BoolToVisibility}}">
                    <controls:IconButton
                        ButtonToolTip="unpin"
                        ClickHandlerMethodName="UnPin"
                        EnableKeepOrientationWhenInRotationOrientedPanelBehavior="True"
                        EventObjectHandler="{Binding ViewModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                        Icon="/Images/Icons/icons8-unpin-20.png"
                        MouseOutOpacity="{DynamicResource IconButtonMouseOutOpacity}"
                        MouseOverCursor="{DynamicResource IconButtonMouseOverCursor}"
                        MouseOverOpacity="{DynamicResource IconButtonMouseOverOpacity}"
                        MouseOverOpacityTransitionAnimationDuration="{DynamicResource IconButtonMouseOverOpacityTransitionAnimationDuration}" />
                </Grid>
            </Grid>
            <controls:IconButton
                ButtonToolTip="close"
                ClickHandlerMethodName="Close"
                EnableKeepOrientationWhenInRotationOrientedPanelBehavior="True"
                EventObjectHandler="{Binding ViewModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                Icon="/Images/Icons/icons8-macos-close-20.png"
                MouseOutOpacity="{DynamicResource IconButtonMouseOutOpacity}"
                MouseOverCursor="{DynamicResource IconButtonMouseOverCursor}"
                MouseOverOpacity="{DynamicResource IconButtonMouseOverOpacity}"
                MouseOverOpacityTransitionAnimationDuration="{DynamicResource IconButtonMouseOverOpacityTransitionAnimationDuration}" />
        </StackPanel>
    </Grid>
</UserControl>
